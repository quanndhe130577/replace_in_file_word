<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF4AAACmAAAApQAA
        AKUAAAClAAAApQAAAKUAAAClAAAApQAAAKUAAAClAAAApQAAAKUAAAClAAAApQAAAKUAAACmAAAAXgAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACBAAAA/wAA
        APwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APwAAAD/AAAAgQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAACAAA
        AOEAAAD/AAAA9AAAAOkAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAA
        AOoAAADpAAAA9AAAAP8AAADhAAAACAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAASAAAA5gAAAP8AAACsAAAAAwAAABQAAAARAAAAEgAAABIAAAARAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAAFAAAAAMAAACuAAAA/wAAAOgAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAABEAAADqAAAA/wAAAKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAKgAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAVAAAA6gAAAP8AAACoAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFYAAAD/AAAA/AAA
        AP8AAAD/AAAA/wAAAP0AAAD/AAAA8wAAAD0AAAAAAAAAAgAAAAAAAAAAAAAABAAAAAAAAABWAAAA/wAA
        AP8AAABXAAAAAAAAABUAAADqAAAA/wAAAKkAAAAAAAAABwAAAAQAAAAEAAAABAAAAAcAAAAAAAAAWAAA
        AP8AAAD8AAAA/wAAAP8AAAD9AAAA/wAAAPMAAAA9AAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AFYAAAD/AAAA/wAAAFcAAAAAAAAAFQAAAOkAAAD/AAAAqAAAAAAAAAADAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAABVAAAA/wAAAPwAAAD/AAAA/QAAAP8AAADzAAAAPQAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAVgAAAP8AAAD/AAAAVwAAAAAAAAAVAAAA6QAAAP8AAADFAAAASwAAAFgAAABWAAAAVgAA
        AFYAAABYAAAASwAAAI4AAAD/AAAA/QAAAP0AAAD/AAAA8wAAAD0AAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAABWAAAA/wAAAP8AAABWAAAAAAAAAAMAAADPAAAA/wAAAPsAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAPwAAAD6AAAA/wAAAPIAAAA9AAAAAAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAAAAAAAEcAAAD1AAAA/wAA
        AP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADyAAAAPAAAAAAAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAGAAAAAAAA
        AB0AAABVAAAAVwAAAFYAAABXAAAAVwAAAFcAAABXAAAAVwAAAFYAAABUAAAAWwAAAC4AAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABVAAAA/wAAAP8AAABVAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFUAAAD/AAAA/wAA
        AGEAAAACAAAAFQAAABEAAAATAAAAFQAAABUAAAAVAAAAFQAAABUAAAAVAAAAEgAAABoAAAAWAAAAAQAA
        AAQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAARgAA
        AP8AAAD6AAAA8AAAAOkAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOgAAAD0AAAA6AAA
        AC8AAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAFAAAAyQAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAA
        APUAAABBAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAUAAAAgwAAAKgAAAClAAAApQAAAKUAAAClAAAApQAAAKUAAAClAAAApQAA
        AKQAAACsAAAAPAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+l//pfgAAAH5AAAJ+gAABfoAAAX6E/yF8hSAhaBESIVL9CSFIAAQhUAA
        CIVAAAiFQAAUhUL0QIVCFJSFQhJABUIUQAVCEUAFQhNABUITQAlCEEAVQhNAK0IAAFdCAACvQwABX0KA
        Ar9C/+l/QAAC/0AAF/9AACf/IABX/0v9L/8=
</value>
  </data>
</root>